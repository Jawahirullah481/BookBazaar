Title :

React Context and Axios Interceptors not updating Authorization header on state change.


What are the details of your problem? 

I'm working on my first React project and I'm using React Context along with Axios for API calls. I've set up an AuthProvider component that uses createContext, and I'm facing an issue with the Authorization header not updating when I change user credentials.

**Here's my AuthProvider component:**

```
import { createContext, useContext, useEffect, useState } from "react";
import { apiClient } from "../api/ApiClient";
import { useNavigate } from "react-router-dom";

const AuthContext = createContext();
export const useAuth = () => useContext(AuthContext);

const AuthProvider = ({ children }) => {

    const [user, setUser] = useState(null);
    const [isLoggedIn, setIsLoggedIn] = useState(false);
    const navigate = useNavigate();


    useEffect(() => {
        if(user) {
            console.log("Updated User : " + JSON.stringify(user));
            addAuthorization();
            setIsLoggedIn(true);
        }
    }, [user]);


    const login = (userDetails, passwordValue) => {
        setUser((oldValue) => {
            return {...userDetails, password: passwordValue}
        });
    };

    const addAuthorization = () => {
        console.log("Updated User : " + JSON.stringify(user));
        apiClient.interceptors.request.use(config => {
            // Use the latest value of the username and password
            config.headers.Authorization = "Basic " + window.btoa(user.username + ":" + user.password);
            return config;
        });
    }


    const changeCredentials = (usernameValue, emailValue, passwordValue) => {
        setUser((oldValue) => {
            return {...oldValue, username: usernameValue, email: emailValue, password: passwordValue}
        });
    }

    const logout = () => {
        setUser(null);
        setIsLoggedIn(false);
        navigate("/home");
    }

    return (
        <AuthContext.Provider value={{ user, isLoggedIn, login, logout, changeCredentials }}>
            {children}
        </AuthContext.Provider>
    );
}

export default AuthProvider;

```

**ApiClient.js :**

```
import axios from 'axios';

export const apiClient = axios.create({
    baseURL: 'http://localhost:8081'
});
```


What did you try and what were you expecting? 

The **login **method works as expected, updating the Authorization header in Axios. However, when I later call the **changeCredentials **method to update the user details, the Authorization header seems to retain the old values.


When first login is called with `username : Bob, password: bob2023`, the Authorization header is,
[Authorization header after login() is called](https://i.stack.imgur.com/XmVCq.png)

After when I changeCredentials is called with `username: Jawa, password: bob2023`, the Authorization header remains same. It doesn't change.


I'm using Axios interceptors inside the addAuthorization function to update the Authorization header, and it appears that the interceptors are not picking up the updated user details.

```
apiClient.interceptors.request.use(config => {
            // Use the latest value of the username and password
            config.headers.Authorization = "Basic " + window.btoa(user.username + ":" + user.password);
            return config;
        });
```


I've confirmed that the changeCredentials method is updating the user details in the state(user) correctly. But, won't reflected in Authorization header.

Any ideas on why the Axios interceptors might not be capturing the updated user details when calling changeCredentials?

Thank you for your help!

**Additional Information:**

    React version: ^18.2.0,
    Axios version: ^2.0.6



Tags :

react axios interceptors request-header Authorization


1. Bob -> Bob
2. Alice -> Alice

3. Bob -> Alice 
4. Alice -> Bob